import { requestSuiFromFaucetV0, getFaucetHost } from '@benfen/bfc.js/faucet';
import { SuiClient, getFullnodeUrl } from '@benfen/bfc.js/client';
import { Ed25519Keypair } from '@benfen/bfc.js/keypairs/ed25519';
import { TransactionBlock } from '@benfen/bfc.js/transactions';


async function main() {

const { execSync } = require('child_process');
// Generate a new Ed25519 Keypair
// const keypair = new Ed25519Keypair();
const keypair = Ed25519Keypair.fromSecretKey(new Uint8Array(32));

// Get faucet
const address = await keypair.getPublicKey().toSuiAddress()
	await requestSuiFromFaucetV0({
		host: getFaucetHost('testnet'),
		recipient: address,
	});
console.log(`The address is :`, address);
const client = new SuiClient({
	url: 'https://obcrpc.openblock.vip/',
});

console.log(`The client ok`);

// generate the modules, and pad them into the following two param `modules` & `dependencies`
const modules = [
	"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"
]

const dependencies =  [
	"0x0000000000000000000000000000000000000000000000000000000000000001",
	"0x0000000000000000000000000000000000000000000000000000000000000002"
]
console.log(`The client okk`);


// const { modules, dependencies } = JSON.parse(
// 	execSync(`sui move build --dump-bytecode-as-base64 --path ${packagePath}`, {
// 		encoding: 'utf-8',
// 	}),
// );
const tx = new TransactionBlock();
const [upgradeCap] = tx.publish({
	modules,
	dependencies,
});
tx.transferObjects([upgradeCap], tx.pure(address));
console.log(`The client okkkk`);

// console.log(await client.getBalance())
const result = await client.signAndExecuteTransactionBlock({
	signer: keypair,
	transactionBlock: tx,
});
console.log(`The client ok`);

console.log({ result });
   
}

main();


// get coins owned by an address
