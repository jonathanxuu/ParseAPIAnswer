"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.keccak256AsHex = keccak256AsHex;
exports.keccak256AsU8a = keccak256AsU8a;
exports.keccak512AsHex = keccak512AsHex;
exports.keccak512AsU8a = keccak512AsU8a;
var _sha = require("@noble/hashes/sha3");
var _util = require("@polkadot/util");
// Copyright 2021-2023 zcloak authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name keccak256AsU8a
 * @description Creates a keccak256 Uint8Array from the input.
 * @example
 * <BR>
 *
 * ```javascript
 * import { keccak256AsU8a } from '@zcloak/crypto';
 *
 * keccak256AsU8a('123'); // => Uint8Array
 * ```
 */
function keccak256AsU8a(value) {
  return (0, _sha.keccak_256)((0, _util.u8aToU8a)(value));
}

/**
 * @name keccak512AsU8a
 * @description Creates a keccak512 Uint8Array from the input.
 * @example
 * <BR>
 *
 * ```javascript
 * import { keccak512AsU8a } from '@zcloak/crypto';
 *
 * keccak512AsU8a('123'); // => Uint8Array
 * ```
 */
function keccak512AsU8a(value) {
  return (0, _sha.keccak_512)((0, _util.u8aToU8a)(value));
}

/**
 * @name keccak256AsHex
 * @description Creates a keccak256 hex string from the input.
 */
function keccak256AsHex(value) {
  return (0, _util.u8aToHex)(keccak256AsU8a(value));
}

/**
 * @name keccak512AsHex
 * @description Creates a keccak512 hex string from the input.
 */
function keccak512AsHex(value) {
  return (0, _util.u8aToHex)(keccak512AsU8a(value));
}