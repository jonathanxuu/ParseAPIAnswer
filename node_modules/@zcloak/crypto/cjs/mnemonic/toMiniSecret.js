"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mnemonicToMiniSecret = mnemonicToMiniSecret;
var _util = require("@polkadot/util");
var _bip = require("bip39");
var _pbkdf = require("../pbkdf2");
var _validate = require("./validate");
// Copyright 2021-2023 zcloak authors & contributors
// SPDX-License-Identifier: Apache-2.0

function mnemonicToMiniSecret(mnemonic) {
  let password = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  if (!(0, _validate.mnemonicValidate)(mnemonic)) {
    throw new Error('Invalid bip39 mnemonic specified');
  }
  const entropy = (0, _util.hexToU8a)((0, _bip.mnemonicToEntropy)(mnemonic));
  const salt = (0, _util.stringToU8a)(`mnemonic${password}`);

  // return the first 32 bytes as the seed
  return (0, _pbkdf.pbkdf2Encode)(entropy, salt).password.slice(0, 32);
}