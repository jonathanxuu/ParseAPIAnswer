"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ed25519PairFromSeed = ed25519PairFromSeed;
var _tweetnacl = _interopRequireDefault(require("tweetnacl"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
// Copyright 2021-2023 zcloak authors & contributors
// SPDX-License-Identifier: Apache-2.0

/**
 * @name ed25519PairFromSeed
 * @summary Creates a new public/secret keypair from a seed.
 * @description
 * Returns a object containing a `publicKey` & `secretKey` generated from the supplied seed.
 * @example
 * <BR>
 *
 * ```javascript
 * import { ed25519PairFromSeed } from '@zcloak/crypto';
 *
 * ed25519PairFromSeed(...); // => { secretKey: [...], publicKey: [...] }
 * ```
 */
function ed25519PairFromSeed(seed) {
  return _tweetnacl.default.sign.keyPair.fromSeed(seed);
}