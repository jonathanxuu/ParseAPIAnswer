import type { WasmInstance } from './types';
import type { WasmBridge } from './WasmBridge';
type PopFirst<T extends unknown[]> = T extends [[WasmInstance, number], ...infer N] ? N : [];
export declare function withWasm<T, F extends (wasm: [WasmInstance, number], ...params: never[]) => T>(wasmBridge: WasmBridge, fn: F, withRetptr?: boolean): (...params: PopFirst<Parameters<F>>) => ReturnType<F>;
export {};
