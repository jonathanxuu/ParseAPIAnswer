import type { WasmInstance } from './types';
export declare class WasmBridge {
    #private;
    wasm: WasmInstance | undefined;
    private getUint8;
    private getUint64;
    private getInt32;
    private getU8a;
    private getU64a;
    allocU8a(value: Uint8Array): [number, number];
    allocString(value: string): [number, number];
    allocU64a(value: BigUint64Array): [number, number];
    resultU8a(retptr: number): Uint8Array;
    resultString(retptr: number): string;
    resultU64a(retptr: number): BigUint64Array;
    addHeapObject(obj: any): number;
    getObject(idx: number): any;
    dropObject(idx: number): void;
    takeObject(idx: number): any;
    initWasm(wasmBytes: string): Promise<void>;
    initAsm(asmBundle: unknown): void;
}
